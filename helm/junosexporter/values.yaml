# Default values for junos_exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

namespace: monitoring

# prometheusOperator is the relase label for prometheus-operator to look at the servicemonitor
prometheusOperator: prometheus-operator

image:
  repository: czerwonk/junos_exporter
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# sshkey is the base64 encoded id_rsa you want to use for authentication
# generate sshkey with `cat $HOME/.ssh/id_rsa | base64 -w0 && echo`
sshkey: QWRkIHlvdXIgb3duIGlkX3JzYSBoZXJl

# configyml is the configfile for the exporter
configyml: |-
    devices:
      - host: srx.example.com
        username: junos_exporter
        keyfile: /config/ssh-keyfile

    features:
      bgp: false
      ospf: false
      isis: false
      l2circuit: false
      environment: true
      routes: true
      routing_engine: true
      interface_diagnostic: true

#serviceMonitor.scapeTimeout needs to be high since junos_exporter uses ssh
#serviceMonitor.interval needs to be higher than scrapeTimeout
serviceMonitor:
  scrapeTimeout: 60s
  interval: 120s
  jobLabel: jobLabel

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 9326

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
